import asyncio
import discord
from discord.ext import commands
import random
import requests

description = '''An example bot to showcase the discord.ext.commands extension
module.'''

intents = discord.Intents.default()
intents.members = True
intents.message_content = True

bot = commands.Bot(command_prefix='F!', description=description, intents=intents)




questions = {
    "Какая самая высокая гора в мире?": ["Эверест", "К2", "Канченджанга", "Лхоцзе"],
    "Какое самое глубокое озеро в мире?": ["Байкал", "Каспийское море", "Виктория", "Глубокое"],
    "Какое животное является самым быстрым на суше?": ["Гепард", "Сайгак", "Страус", "Антилопа гну"],
    "Какая птица является самой большой в мире?": ["Страус", "Андский кондор", "Дрофа", "Пеликан"],
    "Какое самое большое млекопитающее на Земле?": ["Синий кит", "Слон", "Жираф", "Белый медведь"],
    "Сколько океанов на Земле?": ["4", "5", "6", "7"],
    "Какой самый распространенный газ в атмосфере Земли?": ["Азот", "Кислород", "Аргон", "Углекислый газ"],
    "Какая самая длинная река в мире?": ["Нил", "Амазонка", "Янцзы", "Миссисипи"],
    "Какой самый большой материк на Земле?": ["Азия", "Африка", "Северная Америка", "Южная Америка"],
    "Какое самое маленькое млекопитающее на Земле?": ["Шмель", "Свиноносая землеройка", "Летучая мышь-шмель", "Карликовый бегемот"],
    "Какая самая ядовитая рыба в мире?": ["Рыба-фугу", "Бородавчатка", "Скат-хвостокол", "Кубомедуза"],
    "Сколько видов животных на Земле?": ["Более 1 миллиона", "Около 10 миллионов", "Около 100 миллионов", "Более 1 миллиарда"],
    "Какая самая большая пустыня в мире?": ["Сахара", "Антарктида", "Гоби", "Калахари"],
    "Какой самый высокий водопад в мире?": ["Анхель", "Виктория", "Ниагарский", "Йосемити"],
    "Какая самая древняя экосистема на Земле?": ["Дождевые леса", "Коралловые рифы", "Океаны", "Тундра"],

}

facts_az_ecology = [
    '1. Азербайджан богат природными ресурсами, включая нефть и газ.',
    '2. В стране есть богатое разнообразие климатических зон, от горных вершин до пустынь.',
    '3. Загрязнение воздуха является серьезной проблемой, особенно в промышленных районах.',
    '4. Береговая линия Каспийского моря подвергается угрозам от нефтяных разливов и загрязнений.',
    '5. Водохранилище на реке Араз, такое как Геокчайское, стало важным источником воды, но также вызвало проблемы с экологией.',
    '6. Необходимость в устойчивом управлении природными ресурсами становится все более актуальной.',
    '7. Защита биоразнообразия становится приоритетом для сохранения уникальных экосистем.',
    '8. Азербайджан принимает меры по увеличению использования возобновляемых источников энергии.',
    '9. Охрана лесов играет важную роль в сохранении природы и борьбе с изменением климата.',
    '10. Экологическое образование и осведомленность населения являются ключевыми факторами для устойчивого развития.'

]

facts_global_ecology = [
    '1. Изменение климата становится глобальной угрозой для экосистем и жизни на планете.',
    '2. Уровень загрязнения океанов и морей растет из-за пластика, нефти и других отходов.',
    '3. Вымирание видов ускоряется из-за потери среды обитания, браконьерства и климатических изменений.',
    '4. Загрязнение воздуха оказывает негативное воздействие на здоровье миллионов людей по всему миру.',
    '5. Неустойчивое использование природных ресурсов приводит к деградации почвы и вымиранию экосистем.',
    '6. Опустынивание угрожает сельскому хозяйству и приводит к потере плодородных земель.',
    '7. Загрязнение городов и сельских территорий ведет к ухудшению качества жизни и здоровья людей.',
    '8. Промышленные выбросы и отходы оказывают отрицательное воздействие на биоразнообразие и экосистемы.',
    '9. Насыщение атмосферы парниковыми газами усиливает эффект парникового эффекта и глобальное потепление.',
    '10. Образование и коллективные усилия по сохранению окружающей среды становятся все более важными для будущих поколений.',
]

commands_list = [
    "1. F!commands - Список команд",
    "2. F!facts - Случайные 2 факта из списка про глобальную экологию",
    "3. F!factsaz - Случайные 2 факта из списка про экологию в Азербайджане",
    "4. F!advice -Список советов про то как можно помочь окружающей среде.",
    "5. F!trees - Определяет, какое дерево изображено на фото (Дуб или Сосна)",
    "6. F!send — отправляет текст введённый пользователем",
    "7. F!eco_resources - Получить ссылки на полезные ресурсы о защите окружающей среды.",
    "8. F!test — выдает случайные вопросы на тему всего мира."
]

advice_list = [
    "1. Экономьте энергию: Выключайте свет и электроприборы, когда они не нужны, используйте энергоэффективные приборы.",
    "2. Уменьшайте использование пластика: Пользуйтесь многоразовой посудой и сумками вместо пластиковых одноразовых вариантов",
    "3. Поддерживайте переработку: Отдавайте отходы на переработку, разделяйте мусор на органический, пластик, стекло и бумагу",
    "4. Экономьте воду: Закрывайте краны при мытье посуды или чистке зубов, исправляйте течи",
    "5. Используйте общественный транспорт: Предпочитайте общественный транспорт, велосипед или ходьбу, когда это возможно, чтобы сократить выбросы выхлопных газов.",
    "6. Поддерживайте местные продукты: Покупайте местные продукты, чтобы уменьшить расстояние, которое продукты проходят до вас, и сократить выбросы углекислого газа.",
    "7. Экономьте бумагу: Пользуйтесь электронными документами и рекламой, переходите на онлайн-оплату счетов и выписку из банка.",
    "8. Садите деревья: Принимайте участие в посадке деревьев в вашем районе или поддерживайте программы по озеленению.",
    "9. Поддерживайте местные организации: Присоединяйтесь к местным экологическим группам или организациям, чтобы помогать в уходе за окружающей средой.",
    "10. Образовывайте других: Делитесь своими знаниями о том, как заботиться об окружающей среде с друзьями, семьей и сообществом, чтобы вместе добиваться позитивных изменений."
]

@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')

@bot.command()
async def hello(ctx):
    await ctx.send(f'Hi! I am a bot {bot.user}!')
      
@bot.command()
async def facts(ctx):
    random_facts = random.sample(facts_global_ecology, 2)
    await ctx.send("\n".join(random_facts))

@bot.command()
async def facts2(ctx):
    random_facts = random.sample(facts_az_ecology, 2)
    await ctx.send("\n".join(random_facts))    
    
@bot.command(name='advice')
async def advice(ctx):
    await ctx.send("\n".join(advice_list))
    
    
@bot.command(name='commands')
async def advice(ctx):
    await ctx.send("\n".join(commands_list))

@bot.command(name='send')
async def send_message(ctx, *, message):
  """Sends a message on behalf of the bot."""
  if not message:
    await ctx.send("Пожалуйста, введите текст.")
    return
  text = message.strip()  
  await ctx.channel.send(text)

@bot.command()
async def eco_resources(ctx):
  """Sends a message with links to helpful resources about environmental protection."""
  resources_message = (
    "Полезные ресурсы о защите окружающей среды:\n\n"
    "1. Всемирный фонд дикой природы (WWF): https://www.worldwildlife.org/\n"
    "2. Гринпис: https://www.greenpeace.org/international/explore/\n"
    "3. Программа ООН по окружающей среде (ЮНЕП): https://www.unep.org/\n"
    "4. Национальный географический институт: https://www.nationalgeographic.com/magazine\n"
    "5. ЭкоВахта: https://vahtav.ru/job/ekolog-vahta\n"
  )
  await ctx.send(resources_message)

# Функция для генерации случайного вопроса
def get_random_question():
    question, answers = random.choice(list(questions.items()))
    answer_options = [f"{i}. {answer}" for i, answer in enumerate(answers)]
    return f"{question}\n{' | '.join(answer_options)}"

# Функция для проверки ответа пользователя
def check_answer(question, user_answer):
    correct_answer = questions[question][0]
    user_answer = user_answer.lower()
    return user_answer == correct_answer.lower()


@bot.command(name='test')
async def on_message(message):
        question = get_random_question()
        await message.channel.send(question)

        def check(m):
            return m.author == message.author and m.channel == message.channel

        try:
            user_answer = await bot.wait_for('message', check=check, timeout=15)
            if check_answer(question.split("\n")[0], user_answer.content):
                await message.channel.send("Правильно!")
                question = get_random_question()
                await message.channel.send(question)
            else:
                 await message.channel.send("Неправильно.")
        except asyncio.TimeoutError:
            await message.channel.send("Время на ответ вышло.")

       
bot.run("")
